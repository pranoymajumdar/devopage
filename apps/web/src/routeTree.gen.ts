/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as MainLayoutRouteImport } from './routes/_mainLayout'
import { Route as MainLayoutIndexRouteImport } from './routes/_mainLayout/index'
import { Route as MainLayoutTrendingRouteImport } from './routes/_mainLayout/trending'
import { Route as MainLayoutNotificationsRouteImport } from './routes/_mainLayout/notifications'
import { Route as MainLayoutMessagesRouteImport } from './routes/_mainLayout/messages'
import { Route as MainLayoutExploreRouteImport } from './routes/_mainLayout/explore'
import { Route as MainLayoutChallengesRouteImport } from './routes/_mainLayout/challenges'
import { Route as MainLayoutBookmarksRouteImport } from './routes/_mainLayout/bookmarks'
import { Route as MainLayoutPostIdRouteImport } from './routes/_mainLayout/post/[id]'

const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const MainLayoutRoute = MainLayoutRouteImport.update({
  id: '/_mainLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const MainLayoutIndexRoute = MainLayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MainLayoutRoute,
} as any)
const MainLayoutTrendingRoute = MainLayoutTrendingRouteImport.update({
  id: '/trending',
  path: '/trending',
  getParentRoute: () => MainLayoutRoute,
} as any)
const MainLayoutNotificationsRoute = MainLayoutNotificationsRouteImport.update({
  id: '/notifications',
  path: '/notifications',
  getParentRoute: () => MainLayoutRoute,
} as any)
const MainLayoutMessagesRoute = MainLayoutMessagesRouteImport.update({
  id: '/messages',
  path: '/messages',
  getParentRoute: () => MainLayoutRoute,
} as any)
const MainLayoutExploreRoute = MainLayoutExploreRouteImport.update({
  id: '/explore',
  path: '/explore',
  getParentRoute: () => MainLayoutRoute,
} as any)
const MainLayoutChallengesRoute = MainLayoutChallengesRouteImport.update({
  id: '/challenges',
  path: '/challenges',
  getParentRoute: () => MainLayoutRoute,
} as any)
const MainLayoutBookmarksRoute = MainLayoutBookmarksRouteImport.update({
  id: '/bookmarks',
  path: '/bookmarks',
  getParentRoute: () => MainLayoutRoute,
} as any)
const MainLayoutPostIdRoute = MainLayoutPostIdRouteImport.update({
  id: '/post/id',
  path: '/post/id',
  getParentRoute: () => MainLayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/auth': typeof AuthRoute
  '/bookmarks': typeof MainLayoutBookmarksRoute
  '/challenges': typeof MainLayoutChallengesRoute
  '/explore': typeof MainLayoutExploreRoute
  '/messages': typeof MainLayoutMessagesRoute
  '/notifications': typeof MainLayoutNotificationsRoute
  '/trending': typeof MainLayoutTrendingRoute
  '/': typeof MainLayoutIndexRoute
  '/post/id': typeof MainLayoutPostIdRoute
}
export interface FileRoutesByTo {
  '/auth': typeof AuthRoute
  '/bookmarks': typeof MainLayoutBookmarksRoute
  '/challenges': typeof MainLayoutChallengesRoute
  '/explore': typeof MainLayoutExploreRoute
  '/messages': typeof MainLayoutMessagesRoute
  '/notifications': typeof MainLayoutNotificationsRoute
  '/trending': typeof MainLayoutTrendingRoute
  '/': typeof MainLayoutIndexRoute
  '/post/id': typeof MainLayoutPostIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_mainLayout': typeof MainLayoutRouteWithChildren
  '/auth': typeof AuthRoute
  '/_mainLayout/bookmarks': typeof MainLayoutBookmarksRoute
  '/_mainLayout/challenges': typeof MainLayoutChallengesRoute
  '/_mainLayout/explore': typeof MainLayoutExploreRoute
  '/_mainLayout/messages': typeof MainLayoutMessagesRoute
  '/_mainLayout/notifications': typeof MainLayoutNotificationsRoute
  '/_mainLayout/trending': typeof MainLayoutTrendingRoute
  '/_mainLayout/': typeof MainLayoutIndexRoute
  '/_mainLayout/post/id': typeof MainLayoutPostIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/auth'
    | '/bookmarks'
    | '/challenges'
    | '/explore'
    | '/messages'
    | '/notifications'
    | '/trending'
    | '/'
    | '/post/id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/bookmarks'
    | '/challenges'
    | '/explore'
    | '/messages'
    | '/notifications'
    | '/trending'
    | '/'
    | '/post/id'
  id:
    | '__root__'
    | '/_mainLayout'
    | '/auth'
    | '/_mainLayout/bookmarks'
    | '/_mainLayout/challenges'
    | '/_mainLayout/explore'
    | '/_mainLayout/messages'
    | '/_mainLayout/notifications'
    | '/_mainLayout/trending'
    | '/_mainLayout/'
    | '/_mainLayout/post/id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  MainLayoutRoute: typeof MainLayoutRouteWithChildren
  AuthRoute: typeof AuthRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_mainLayout': {
      id: '/_mainLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_mainLayout/': {
      id: '/_mainLayout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MainLayoutIndexRouteImport
      parentRoute: typeof MainLayoutRoute
    }
    '/_mainLayout/trending': {
      id: '/_mainLayout/trending'
      path: '/trending'
      fullPath: '/trending'
      preLoaderRoute: typeof MainLayoutTrendingRouteImport
      parentRoute: typeof MainLayoutRoute
    }
    '/_mainLayout/notifications': {
      id: '/_mainLayout/notifications'
      path: '/notifications'
      fullPath: '/notifications'
      preLoaderRoute: typeof MainLayoutNotificationsRouteImport
      parentRoute: typeof MainLayoutRoute
    }
    '/_mainLayout/messages': {
      id: '/_mainLayout/messages'
      path: '/messages'
      fullPath: '/messages'
      preLoaderRoute: typeof MainLayoutMessagesRouteImport
      parentRoute: typeof MainLayoutRoute
    }
    '/_mainLayout/explore': {
      id: '/_mainLayout/explore'
      path: '/explore'
      fullPath: '/explore'
      preLoaderRoute: typeof MainLayoutExploreRouteImport
      parentRoute: typeof MainLayoutRoute
    }
    '/_mainLayout/challenges': {
      id: '/_mainLayout/challenges'
      path: '/challenges'
      fullPath: '/challenges'
      preLoaderRoute: typeof MainLayoutChallengesRouteImport
      parentRoute: typeof MainLayoutRoute
    }
    '/_mainLayout/bookmarks': {
      id: '/_mainLayout/bookmarks'
      path: '/bookmarks'
      fullPath: '/bookmarks'
      preLoaderRoute: typeof MainLayoutBookmarksRouteImport
      parentRoute: typeof MainLayoutRoute
    }
    '/_mainLayout/post/id': {
      id: '/_mainLayout/post/id'
      path: '/post/id'
      fullPath: '/post/id'
      preLoaderRoute: typeof MainLayoutPostIdRouteImport
      parentRoute: typeof MainLayoutRoute
    }
  }
}

interface MainLayoutRouteChildren {
  MainLayoutBookmarksRoute: typeof MainLayoutBookmarksRoute
  MainLayoutChallengesRoute: typeof MainLayoutChallengesRoute
  MainLayoutExploreRoute: typeof MainLayoutExploreRoute
  MainLayoutMessagesRoute: typeof MainLayoutMessagesRoute
  MainLayoutNotificationsRoute: typeof MainLayoutNotificationsRoute
  MainLayoutTrendingRoute: typeof MainLayoutTrendingRoute
  MainLayoutIndexRoute: typeof MainLayoutIndexRoute
  MainLayoutPostIdRoute: typeof MainLayoutPostIdRoute
}

const MainLayoutRouteChildren: MainLayoutRouteChildren = {
  MainLayoutBookmarksRoute: MainLayoutBookmarksRoute,
  MainLayoutChallengesRoute: MainLayoutChallengesRoute,
  MainLayoutExploreRoute: MainLayoutExploreRoute,
  MainLayoutMessagesRoute: MainLayoutMessagesRoute,
  MainLayoutNotificationsRoute: MainLayoutNotificationsRoute,
  MainLayoutTrendingRoute: MainLayoutTrendingRoute,
  MainLayoutIndexRoute: MainLayoutIndexRoute,
  MainLayoutPostIdRoute: MainLayoutPostIdRoute,
}

const MainLayoutRouteWithChildren = MainLayoutRoute._addFileChildren(
  MainLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  MainLayoutRoute: MainLayoutRouteWithChildren,
  AuthRoute: AuthRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
